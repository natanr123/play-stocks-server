"use strict";
import assert from 'assert';
import sinon from 'sinon';
import IntrinioEngine from 'app/engine/IntrinioEngine';
import Interval from 'app/service/Interval';
import MyDB from 'app/MyDB'
import Entity from 'app/entity/Entity'
import HistoryLineIntrinio from 'app/entity/HistoryLineIntrinio'

//import StocksSymbols from 'app/service/StocksSymbols';


process.on('unhandledRejection', error => {
    // Won't execute
    console.log('unhandledRejection22222', error);
    throw error;
});

//
describe('IntrinioEngine', function() {
    /// AlphaVantageServiceStub.start();
    this.timeout(1000*5);


    it('quoteToHistoryLine', ()=>
    {
        let quote =  {type: 'bid',
            timestamp: 1500407999.2929556,
            ticker: 'MSFT',
            size: 200,
            price: 73.11 };

        let historyLine = IntrinioEngine.quoteToHistoryLine(quote);
        assert.equal(historyLine.newYorkTime,'2017-07-18 15:59:59');
        console.log('historyLine: ',historyLine);
    });

    it('onQuote', ()=>
    {
        resetDB();
        let quote =  {type: 'ask',
            timestamp: 1500407999.2929556,
            ticker: 'MSFT',
            size: 200,
            price: 73.11 };


        IntrinioEngine.onQuote(quote);
        let all = MyDB.getInstance().allByClass(HistoryLineIntrinio);
        console.log(all);
        assert.equal(all[0].newYorkTime ,'2017-07-18 15:59:59');


    });

    // it('start', (done)=>
    // {
    //
    //     let ir = IntrinioEngine.start();
    //     Interval.sleep(1000*4).then(()=>{
    //         console.log('1000*4 finished:');
    //         ir.destroy();
    //         done();
    //     })
    //
    // });


    function resetDB() {
        MyDB.getInstance().clear();
        Entity.reset();
    }



});

