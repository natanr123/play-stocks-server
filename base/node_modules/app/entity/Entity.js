import MyDB from 'app/MyDB'

export default class Entity
{
    static currentIdNumber = 0;
    id = 0;
    constructor(notFromHere=false)
    {

        // if(!notFromHere) {
        //     throw new Error('Entity Should only be created with create');
        // }
    }

    static reset()
    {
        Entity.currentIdNumber = 0;
    }

    static addToDB(entity)
    {
        Entity.currentIdNumber++;
        entity.id = Entity.currentIdNumber;
        if(MyDB.getInstance().collection[entity.id]!==undefined) {
            console.log('id already exists: ' + entity.id);
            throw new Error('id already exists: ' + entity.id);
        }
        MyDB.getInstance().set(Entity.currentIdNumber,entity);
    }

    // The id does not MUST be auto increment
    static generateId()
    {
        //return 'ID'+(new Date().getTime());

        // This breaks CQS but never mind
        Entity.currentIdNumber++;
        return 'ID_'+Entity.currentIdNumber;
    }

    equal(other)
    {
        if(this.id === null) throw new Error('equal this.id is null');
        if(this.id === undefined) throw new Error('equal this.id is undefined');
        if(this.id === 0) throw new Error('equal this.id is 0');

        if(other.id === null) throw new Error('other this.id is null');
        if(other.id === undefined) throw new Error('other this.id is undefined');
        if(other.id === 0) throw new Error('other this.id is 0');

        return this.id === other.id;
    }
}