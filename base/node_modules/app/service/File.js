import path from 'path'
import fs from 'fs'
import fsp from 'fs-promise';
import FileService from 'app/service/FileService'
import {promisify} from 'util'
import stringify from 'csv-stringify'

export default class File {

    path:String;
    empty:Boolean = true;

    /**
     *
     * @param path
     * @return {Promise.<File>}
     */
    static async createBlank(path) {

        let onlyPath = require('path').dirname(path);
        await FileService.getInstance().createFolderIfDoesNotExists(onlyPath);
        let file = new File();
        file.path = path;
        await fsp.writeFile(path,'');
        return file;
    }

    appendLine(line) {
        let appendFile = promisify(fs.appendFile);
        return appendFile(this.path,line);
    }

    appendCSVLine(arr) {

        let newLine = this.empty ? '' : "\n";
        this.empty = false;
        return this.appendLine(newLine+File.convertArrToCSVLine(arr));
    }

    static convertArrToCSVLine(arr:Array) {

        // let output = null;
        // stringify(arr,(err,tempOutput)=>{
        //     console.log('ggggggggggggggg');
        //     console.log('tempOutputtempOutputtempOutputtempOutput',tempOutput);
        //     output = tempOutput;
        // });
        //
        // console.log('ddddddddddddddddddd: ',output)
        // if( (output===undefined) || (output===null) ) {
        //     throw new Error('Something bad happened convertArrToCSVLine',output)
        // }
        // return output;
        return arr.join(',');

    }
}